export const en = {
  app: {
    title: 'Taskmaster',
  },
  common: {
    save: 'Save',
    cancel: 'Cancel',
    select: 'Select',
    system: 'System',
    light: 'Light',
    dark: 'Dark',
    offline: 'Offline',
    online: 'Online',
    syncing: 'Syncing...',
    never: 'Never',
    justNow: 'Just now',
    minutesAgo: '{m}m ago',
    hoursAgo: '{h}h ago',
    clear: 'Clear',
  },
  header: {
    openSidebar: 'Open sidebar',
    syncWithSiyuan: 'Sync with SiYuan Notes',
    appearance: 'Appearance',
    connectionSettings: 'Connection Settings',
    retryLocalTasksSync: 'Retry Local Tasks Sync',
    syncStatus: 'Sync Status',
    lastSync: 'Last sync: {time}',
    offlineNotice: 'Working offline. Changes will sync when connection is restored.',
    taskStats: '{completed} of {total} completed ({rate}%)',
  },
  settings: {
    title: 'Connection Settings',
    description: 'Configure your SiYuan Notes connection. The app will sync tasks with your SiYuan Notes instance.',
    baseUrl: 'SiYuan Notes URL',
    baseUrlHelp: 'The URL where your SiYuan Notes instance is running (e.g., http://localhost:6806)',
    token: 'API Token',
    tokenPlaceholder: 'Enter your API token',
    tokenHelp: 'Your SiYuan Notes API token. You can find this in Settings → About → API Token',
    dailySection: 'Daily Note Insertion',
    dailySectionHelp: 'Configure where new tasks are inserted in your daily note.',
    notebookId: 'Notebook (box) ID',
    notebookIdPlaceholder: 'e.g. 20240101123456-abcdef',
    notebookIdHelp: 'The SiYuan notebook (box) ID that contains your daily notes.',
    dailyHPath: 'Daily hPath (Sprig template)',
    dailyHPathPlaceholder: 'e.g. /Journal/{{ now | date "2006-01-02" }}',
    dailyHPathHelp: 'Rendered via /api/template/renderSprig to locate today’s document. Quotes are escaped automatically.',
    anchorText: 'Anchor text',
    anchorTextPlaceholder: 'e.g. ## Tasks',
    anchorTextHelp: 'The exact text to search for in the document. New tasks insert after this block.',
    testConnection: 'Test Connection',
    testingConnection: 'Testing Connection...',
    testSuccess: 'Connection successful! SiYuan Notes is accessible.',
    testFail: 'Connection failed. Please check your URL and token.',
    testInvalidUrl: 'Please enter a valid SiYuan Notes URL',
    testInvalidToken: 'Please enter an API token',
    noteTitle: 'Note:',
    noteText: 'Make sure your SiYuan Notes instance is running and accessible. The API token can be found in your SiYuan Notes settings under About → API Token.',
    httpsNoticeTitle: 'HTTPS Notice:',
    httpsNoticeText: 'If accessing from HTTPS, your SiYuan Notes URL must also use HTTPS to avoid mixed content security restrictions.',
    scrollTop: 'Scroll to top',
    saveSettings: 'Save Settings',
    saveSuccess: 'Connection settings saved successfully',
    saveError: 'Please fill in both URL and token fields',
    language: 'Language',
  },
  tasks: {
    createTask: 'Create Task',
    deleteTask: 'Delete Task',
    markAsDone: 'Mark as Done',
    markAsTodo: 'Mark as Todo',
    inProgress: 'In Progress',
    toDo: 'To Do',
    completed: 'Completed',
    cancelled: 'Cancelled',
    today: 'Today',
    tomorrow: 'Tomorrow',
    editTask: 'Edit Task',
    createNewTask: 'Create New Task',
    taskDescription: 'Task Description',
    priority: 'Priority',
    high: 'High',
    medium: 'Medium',
    low: 'Low',
    dueDate: 'Due Date',
    addTagPlaceholder: 'Add a tag...',
    contentPlaceholder: 'What needs to be done?',
    saving: 'Saving...',
    updateTask: 'Update Task',
    openInSiyuan: 'Open task',
    noTasksYet: 'No tasks yet',
    noTasksMatch: 'No tasks match your filters',
    emptyCreateFirst: 'Create your first task to get started with your productivity journey.',
    emptyAdjustFilters: 'Try adjusting your filters to see more tasks, or create a new one.',
  },
  forms: {
    dates: 'Dates',
    startDate: 'Start Date',
    scheduled: 'Scheduled',
    recurrence: 'Recurrence',
    recurrencePlaceholder: 'e.g., every week, every 2 days',
    baseOnDone: 'base on completion (when done)',
    dependencies: 'Dependencies',
    quickSelect: 'Quick select:',
  },
  filters: {
    advancedQuery: 'Advanced query',
    showAdvanced: 'Show advanced query',
    hideAdvanced: 'Hide advanced query',
    queryLabel: 'Query (plugin-compatible)',
    queryHelper: 'Query Helper',
    status: 'Status',
    priority: 'Priority',
    due: 'Due',
    starts: 'Starts',
    tags: 'Tags',
    select: 'Select',
    sort: 'Sort',
    limit: 'Limit',
    filterByStatus: 'Filter by Status',
    filterByPriority: 'Filter by Priority',
    filterByTags: 'Filter by Tags',
    dueDateAsc: 'Due Date ↑',
    dueDateDesc: 'Due Date ↓',
    priorityAsc: 'Priority ↑',
    priorityDesc: 'Priority ↓',
    newest: 'Newest',
    oldest: 'Oldest',
    az: 'A-Z',
    za: 'Z-A',
    clearN: 'Clear ({n})',
    clear: 'Clear',
    done: 'Done',
  },
  sidebar: {
    overview: 'Overview',
    quickViews: 'Quick Views',
    projects: 'Projects',
    inbox: 'Inbox',
    todayTasks: 'Today Tasks',
    todayComplete: 'Today Complete',
    allTasks: 'All tasks',
    untaggedTasks: 'Tasks without tags',
    dueOrScheduledToday: 'Due or scheduled today',
    overdue: 'Overdue',
    pastDueDate: 'Past due date',
    finishedTasks: 'Finished tasks',
    searchTasks: 'Search tasks...',
    clearTaskSearch: 'Clear task search',
    searchTags: 'Search tags...',
    clearTagSearch: 'Clear tag search',
  },
};

export type EnLocale = typeof en;
